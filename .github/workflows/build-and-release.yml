name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get the version tag
        id: get_tag
        run: echo "::set-output name=TAG::${GITHUB_REF#refs/tags/}"
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
           python -m pip install -r .\requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --collect-submodules=pydicom --icon=assets/icon.ico --add-data="assets/icon.ico;." --noconsole DicomTranslator.py --noconfirm

      - name: Extract version
        id: get_version
        run: echo "::set-output name=VERSION::$(python setup.py --version)"
        shell: bash

      - name: Rename file
        run: mv ./dist/DicomTranslator.exe ./dist/DicomTranslator-windows-${{  steps.get_tag.outputs.TAG }}.exe

      - name: Upload Executable to Artifact
        uses: actions/upload-artifact@v3
        with:
          name: DicomTranslator-windows-${{  steps.get_tag.outputs.TAG }}
          path: ./dist/DicomTranslator-windows-${{  steps.get_tag.outputs.TAG }}.exe

      # Inno Setup
      - name: Create Installer
        run: |
          ISCC.exe /DMyAppVersion=${{ steps.get_tag.outputs.TAG }} /F"DicomTranslatorSetup-${{ steps.get_tag.outputs.TAG }}" .\DicomTranslator.iss

      - name: Upload Installer to Artifact
        uses: actions/upload-artifact@v3
        with:
          name: DicomTranslatorSetup-windows-${{ steps.get_tag.outputs.TAG }}
          path: ./dist/DicomTranslatorSetup-${{ steps.get_tag.outputs.TAG }}.exe